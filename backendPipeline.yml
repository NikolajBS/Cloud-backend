steps:
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']

  - name: 'gcr.io/cloud-builders/npm'
    args: ['install', 'deepai']

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/cloud-handin-project/backend-img:$BUILD_ID', '.'] 

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'tag'
      - 'gcr.io/cloud-handin-project/backend-img:$BUILD_ID'
      - 'gcr.io/cloud-handin-project/backend-img:latest'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/cloud-handin-project/backend-img:$BUILD_ID']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/cloud-handin-project/backend-img:latest']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - container
      - clusters
      - get-credentials
      - 'autopilot-cluster-1'
      - '--region=us-central1'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-cluster-1'

  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        export CLOUDSDK_COMPUTE_REGION=us-central1
        export CLOUDSDK_CONTAINER_CLUSTER=autopilot-cluster-1
        kubectl apply -f backend-deployment.yml
        kubectl apply -f backend-service.yml
